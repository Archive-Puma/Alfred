
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "programleft+-ADDSUBleft*/BYBTWNADD ALFRED BTWN BY ELSE END EQUAL EXIT GREATER ID IF IN INPUT INTEGER IS LOWER PRINT PRINTLN STORE STRING SUB THAN TO WHILE program : ALFRED statements  statements : onlystatements\n                       | empty\n         onlystatements : statements statement\n                           | statement\n         statement : method\n                      | conditional\n         conditional : IF expression onlystatements ELSE onlystatements END\n                        | IF expression onlystatements END\n         statement : WHILE expression onlystatements END\n         expression : id  id : ID  expression : STRING\n                       | INTEGER\n         assignment : id '=' expression\n            assignment : id IS expression\n            assignment : id IS EQUAL TO expression\n         expression : expression '+' expression\n                       | expression '-' expression\n                       | expression '*' expression\n                       | expression '/' expression\n\n                       | expression ADD expression\n                       | expression SUB expression\n                       | expression BY expression\n                       | expression BTWN expression\n         expression : expression '=' expression\n                       | expression '>' expression\n                       | expression '<' expression\n\n                       | expression IS expression\n                       | expression EQUAL TO expression\n                       | expression LOWER THAN expression\n                       | expression GREATER THAN expression\n                       | expression IS EQUAL TO expression\n                       | expression IS LOWER THAN expression\n                       | expression IS GREATER THAN expression\n         method : exit\n                   | store\n                   | stdin\n                   | stdout\n                   | assignment\n         exit : EXIT  store : STORE IN id  stdin : INPUT arg  stdout : PRINT expression  stdout : PRINTLN expression  arg : expression\n                | empty\n         empty : "
    
_lr_action_items = {'ALFRED':([0,],[2,]),'$end':([1,2,3,4,5,6,7,8,10,11,12,13,14,16,19,22,23,25,26,27,32,33,34,35,36,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,79,84,85,86,88,89,90,91,92,],[0,-48,-1,-2,-3,-5,-6,-7,-36,-37,-38,-39,-40,-41,-48,-12,-4,-11,-13,-14,-43,-46,-47,-44,-45,-42,-15,-16,-10,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-9,-30,-31,-32,-17,-33,-34,-35,-8,]),'WHILE':([2,3,4,5,6,7,8,10,11,12,13,14,16,19,22,23,24,25,26,27,28,32,33,34,35,36,37,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,78,79,84,85,86,87,88,89,90,91,92,],[9,9,-2,-3,-5,-6,-7,-36,-37,-38,-39,-40,-41,-48,-12,-4,9,-11,-13,-14,9,-43,-46,-47,-44,-45,-2,9,-2,-42,-15,-16,-10,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,9,-9,-30,-31,-32,-2,-17,-33,-34,-35,-8,]),'IF':([2,3,4,5,6,7,8,10,11,12,13,14,16,19,22,23,24,25,26,27,28,32,33,34,35,36,37,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,78,79,84,85,86,87,88,89,90,91,92,],[15,15,-2,-3,-5,-6,-7,-36,-37,-38,-39,-40,-41,-48,-12,-4,15,-11,-13,-14,15,-43,-46,-47,-44,-45,-2,15,-2,-42,-15,-16,-10,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,15,-9,-30,-31,-32,-2,-17,-33,-34,-35,-8,]),'EXIT':([2,3,4,5,6,7,8,10,11,12,13,14,16,19,22,23,24,25,26,27,28,32,33,34,35,36,37,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,78,79,84,85,86,87,88,89,90,91,92,],[16,16,-2,-3,-5,-6,-7,-36,-37,-38,-39,-40,-41,-48,-12,-4,16,-11,-13,-14,16,-43,-46,-47,-44,-45,-2,16,-2,-42,-15,-16,-10,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,16,-9,-30,-31,-32,-2,-17,-33,-34,-35,-8,]),'STORE':([2,3,4,5,6,7,8,10,11,12,13,14,16,19,22,23,24,25,26,27,28,32,33,34,35,36,37,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,78,79,84,85,86,87,88,89,90,91,92,],[17,17,-2,-3,-5,-6,-7,-36,-37,-38,-39,-40,-41,-48,-12,-4,17,-11,-13,-14,17,-43,-46,-47,-44,-45,-2,17,-2,-42,-15,-16,-10,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,17,-9,-30,-31,-32,-2,-17,-33,-34,-35,-8,]),'INPUT':([2,3,4,5,6,7,8,10,11,12,13,14,16,19,22,23,24,25,26,27,28,32,33,34,35,36,37,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,78,79,84,85,86,87,88,89,90,91,92,],[19,19,-2,-3,-5,-6,-7,-36,-37,-38,-39,-40,-41,-48,-12,-4,19,-11,-13,-14,19,-43,-46,-47,-44,-45,-2,19,-2,-42,-15,-16,-10,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,19,-9,-30,-31,-32,-2,-17,-33,-34,-35,-8,]),'PRINT':([2,3,4,5,6,7,8,10,11,12,13,14,16,19,22,23,24,25,26,27,28,32,33,34,35,36,37,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,78,79,84,85,86,87,88,89,90,91,92,],[20,20,-2,-3,-5,-6,-7,-36,-37,-38,-39,-40,-41,-48,-12,-4,20,-11,-13,-14,20,-43,-46,-47,-44,-45,-2,20,-2,-42,-15,-16,-10,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,20,-9,-30,-31,-32,-2,-17,-33,-34,-35,-8,]),'PRINTLN':([2,3,4,5,6,7,8,10,11,12,13,14,16,19,22,23,24,25,26,27,28,32,33,34,35,36,37,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,78,79,84,85,86,87,88,89,90,91,92,],[21,21,-2,-3,-5,-6,-7,-36,-37,-38,-39,-40,-41,-48,-12,-4,21,-11,-13,-14,21,-43,-46,-47,-44,-45,-2,21,-2,-42,-15,-16,-10,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,21,-9,-30,-31,-32,-2,-17,-33,-34,-35,-8,]),'ID':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,],[22,22,-2,-3,-5,-6,-7,22,-36,-37,-38,-39,-40,22,-41,22,22,22,-12,-4,22,-11,-13,-14,22,22,22,22,-43,-46,-47,-44,-45,-2,22,22,22,22,22,22,22,22,22,22,22,22,22,-2,-42,-15,-16,-10,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,22,22,22,22,-9,22,22,22,22,-30,-31,-32,-2,-17,-33,-34,-35,-8,]),'END':([6,7,8,10,11,12,13,14,16,19,22,23,25,26,27,32,33,34,35,36,37,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,79,84,85,86,87,88,89,90,91,92,],[-5,-6,-7,-36,-37,-38,-39,-40,-41,-48,-12,-4,-11,-13,-14,-43,-46,-47,-44,-45,59,79,-42,-15,-16,-10,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-9,-30,-31,-32,92,-17,-33,-34,-35,-8,]),'ELSE':([6,7,8,10,11,12,13,14,16,19,22,23,25,26,27,32,33,34,35,36,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,79,84,85,86,88,89,90,91,92,],[-5,-6,-7,-36,-37,-38,-39,-40,-41,-48,-12,-4,-11,-13,-14,-43,-46,-47,-44,-45,78,-42,-15,-16,-10,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-9,-30,-31,-32,-17,-33,-34,-35,-8,]),'STRING':([9,15,19,20,21,30,31,38,39,40,41,42,43,44,45,46,47,48,49,75,76,77,80,81,82,83,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'INTEGER':([9,15,19,20,21,30,31,38,39,40,41,42,43,44,45,46,47,48,49,75,76,77,80,81,82,83,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'IN':([17,],[29,]),'=':([18,22,24,25,26,27,28,33,35,36,56,57,60,61,62,63,64,65,66,67,68,69,70,71,84,85,86,88,89,90,91,],[30,-12,46,-11,-13,-14,46,46,46,46,46,46,-18,-19,-20,-21,-22,-23,-24,-25,46,46,46,46,46,46,46,46,46,46,46,]),'IS':([18,22,24,25,26,27,28,33,35,36,56,57,60,61,62,63,64,65,66,67,68,69,70,71,84,85,86,88,89,90,91,],[31,-12,49,-11,-13,-14,49,49,49,49,49,49,-18,-19,-20,-21,-22,-23,-24,-25,49,49,49,49,49,49,49,49,49,49,49,]),'+':([22,24,25,26,27,28,33,35,36,56,57,60,61,62,63,64,65,66,67,68,69,70,71,84,85,86,88,89,90,91,],[-12,38,-11,-13,-14,38,38,38,38,38,38,-18,-19,-20,-21,-22,-23,-24,-25,38,38,38,38,38,38,38,38,38,38,38,]),'-':([22,24,25,26,27,28,33,35,36,56,57,60,61,62,63,64,65,66,67,68,69,70,71,84,85,86,88,89,90,91,],[-12,39,-11,-13,-14,39,39,39,39,39,39,-18,-19,-20,-21,-22,-23,-24,-25,39,39,39,39,39,39,39,39,39,39,39,]),'*':([22,24,25,26,27,28,33,35,36,56,57,60,61,62,63,64,65,66,67,68,69,70,71,84,85,86,88,89,90,91,],[-12,40,-11,-13,-14,40,40,40,40,40,40,40,40,-20,-21,40,40,-24,-25,40,40,40,40,40,40,40,40,40,40,40,]),'/':([22,24,25,26,27,28,33,35,36,56,57,60,61,62,63,64,65,66,67,68,69,70,71,84,85,86,88,89,90,91,],[-12,41,-11,-13,-14,41,41,41,41,41,41,41,41,-20,-21,41,41,-24,-25,41,41,41,41,41,41,41,41,41,41,41,]),'ADD':([22,24,25,26,27,28,33,35,36,56,57,60,61,62,63,64,65,66,67,68,69,70,71,84,85,86,88,89,90,91,],[-12,42,-11,-13,-14,42,42,42,42,42,42,-18,-19,-20,-21,-22,-23,-24,-25,42,42,42,42,42,42,42,42,42,42,42,]),'SUB':([22,24,25,26,27,28,33,35,36,56,57,60,61,62,63,64,65,66,67,68,69,70,71,84,85,86,88,89,90,91,],[-12,43,-11,-13,-14,43,43,43,43,43,43,-18,-19,-20,-21,-22,-23,-24,-25,43,43,43,43,43,43,43,43,43,43,43,]),'BY':([22,24,25,26,27,28,33,35,36,56,57,60,61,62,63,64,65,66,67,68,69,70,71,84,85,86,88,89,90,91,],[-12,44,-11,-13,-14,44,44,44,44,44,44,44,44,-20,-21,44,44,-24,-25,44,44,44,44,44,44,44,44,44,44,44,]),'BTWN':([22,24,25,26,27,28,33,35,36,56,57,60,61,62,63,64,65,66,67,68,69,70,71,84,85,86,88,89,90,91,],[-12,45,-11,-13,-14,45,45,45,45,45,45,45,45,-20,-21,45,45,-24,-25,45,45,45,45,45,45,45,45,45,45,45,]),'>':([22,24,25,26,27,28,33,35,36,56,57,60,61,62,63,64,65,66,67,68,69,70,71,84,85,86,88,89,90,91,],[-12,47,-11,-13,-14,47,47,47,47,47,47,-18,-19,-20,-21,-22,-23,-24,-25,47,47,47,47,47,47,47,47,47,47,47,]),'<':([22,24,25,26,27,28,33,35,36,56,57,60,61,62,63,64,65,66,67,68,69,70,71,84,85,86,88,89,90,91,],[-12,48,-11,-13,-14,48,48,48,48,48,48,-18,-19,-20,-21,-22,-23,-24,-25,48,48,48,48,48,48,48,48,48,48,48,]),'EQUAL':([22,24,25,26,27,28,31,33,35,36,49,56,57,60,61,62,63,64,65,66,67,68,69,70,71,84,85,86,88,89,90,91,],[-12,50,-11,-13,-14,50,58,50,50,50,72,50,50,-18,-19,-20,-21,-22,-23,-24,-25,50,50,50,50,50,50,50,50,50,50,50,]),'LOWER':([22,24,25,26,27,28,33,35,36,49,56,57,60,61,62,63,64,65,66,67,68,69,70,71,84,85,86,88,89,90,91,],[-12,51,-11,-13,-14,51,51,51,51,73,51,51,-18,-19,-20,-21,-22,-23,-24,-25,51,51,51,51,51,51,51,51,51,51,51,]),'GREATER':([22,24,25,26,27,28,33,35,36,49,56,57,60,61,62,63,64,65,66,67,68,69,70,71,84,85,86,88,89,90,91,],[-12,52,-11,-13,-14,52,52,52,52,74,52,52,-18,-19,-20,-21,-22,-23,-24,-25,52,52,52,52,52,52,52,52,52,52,52,]),'TO':([50,58,72,],[75,80,81,]),'THAN':([51,52,73,74,],[76,77,82,83,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements':([2,24,28,78,],[3,53,53,53,]),'onlystatements':([2,24,28,78,],[4,37,54,87,]),'empty':([2,19,24,28,78,],[5,34,5,5,5,]),'statement':([2,3,24,28,53,78,],[6,23,6,6,23,6,]),'method':([2,3,24,28,53,78,],[7,7,7,7,7,7,]),'conditional':([2,3,24,28,53,78,],[8,8,8,8,8,8,]),'exit':([2,3,24,28,53,78,],[10,10,10,10,10,10,]),'store':([2,3,24,28,53,78,],[11,11,11,11,11,11,]),'stdin':([2,3,24,28,53,78,],[12,12,12,12,12,12,]),'stdout':([2,3,24,28,53,78,],[13,13,13,13,13,13,]),'assignment':([2,3,24,28,53,78,],[14,14,14,14,14,14,]),'id':([2,3,9,15,19,20,21,24,28,29,30,31,38,39,40,41,42,43,44,45,46,47,48,49,53,75,76,77,78,80,81,82,83,],[18,18,25,25,25,25,25,18,18,55,25,25,25,25,25,25,25,25,25,25,25,25,25,25,18,25,25,25,18,25,25,25,25,]),'expression':([9,15,19,20,21,30,31,38,39,40,41,42,43,44,45,46,47,48,49,75,76,77,80,81,82,83,],[24,28,33,35,36,56,57,60,61,62,63,64,65,66,67,68,69,70,71,84,85,86,88,89,90,91,]),'arg':([19,],[32,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> ALFRED statements','program',2,'p_program','parser.py',22),
  ('statements -> onlystatements','statements',1,'p_statements','parser.py',26),
  ('statements -> empty','statements',1,'p_statements','parser.py',27),
  ('onlystatements -> statements statement','onlystatements',2,'p_onlystatements','parser.py',32),
  ('onlystatements -> statement','onlystatements',1,'p_onlystatements','parser.py',33),
  ('statement -> method','statement',1,'p_statement','parser.py',42),
  ('statement -> conditional','statement',1,'p_statement','parser.py',43),
  ('conditional -> IF expression onlystatements ELSE onlystatements END','conditional',6,'p_conditional','parser.py',50),
  ('conditional -> IF expression onlystatements END','conditional',4,'p_conditional','parser.py',51),
  ('statement -> WHILE expression onlystatements END','statement',4,'p_while','parser.py',61),
  ('expression -> id','expression',1,'p_identifier','parser.py',68),
  ('id -> ID','id',1,'p_id','parser.py',72),
  ('expression -> STRING','expression',1,'p_primitive','parser.py',76),
  ('expression -> INTEGER','expression',1,'p_primitive','parser.py',77),
  ('assignment -> id = expression','assignment',3,'p_assignment','parser.py',82),
  ('assignment -> id IS expression','assignment',3,'p_assignment','parser.py',83),
  ('assignment -> id IS EQUAL TO expression','assignment',5,'p_assignment','parser.py',84),
  ('expression -> expression + expression','expression',3,'p_binaryop_math','parser.py',91),
  ('expression -> expression - expression','expression',3,'p_binaryop_math','parser.py',92),
  ('expression -> expression * expression','expression',3,'p_binaryop_math','parser.py',93),
  ('expression -> expression / expression','expression',3,'p_binaryop_math','parser.py',94),
  ('expression -> expression ADD expression','expression',3,'p_binaryop_math','parser.py',96),
  ('expression -> expression SUB expression','expression',3,'p_binaryop_math','parser.py',97),
  ('expression -> expression BY expression','expression',3,'p_binaryop_math','parser.py',98),
  ('expression -> expression BTWN expression','expression',3,'p_binaryop_math','parser.py',99),
  ('expression -> expression = expression','expression',3,'p_binaryop_bool','parser.py',105),
  ('expression -> expression > expression','expression',3,'p_binaryop_bool','parser.py',106),
  ('expression -> expression < expression','expression',3,'p_binaryop_bool','parser.py',107),
  ('expression -> expression IS expression','expression',3,'p_binaryop_bool','parser.py',109),
  ('expression -> expression EQUAL TO expression','expression',4,'p_binaryop_bool','parser.py',110),
  ('expression -> expression LOWER THAN expression','expression',4,'p_binaryop_bool','parser.py',111),
  ('expression -> expression GREATER THAN expression','expression',4,'p_binaryop_bool','parser.py',112),
  ('expression -> expression IS EQUAL TO expression','expression',5,'p_binaryop_bool','parser.py',113),
  ('expression -> expression IS LOWER THAN expression','expression',5,'p_binaryop_bool','parser.py',114),
  ('expression -> expression IS GREATER THAN expression','expression',5,'p_binaryop_bool','parser.py',115),
  ('method -> exit','method',1,'p_method','parser.py',127),
  ('method -> store','method',1,'p_method','parser.py',128),
  ('method -> stdin','method',1,'p_method','parser.py',129),
  ('method -> stdout','method',1,'p_method','parser.py',130),
  ('method -> assignment','method',1,'p_method','parser.py',131),
  ('exit -> EXIT','exit',1,'p_exit','parser.py',136),
  ('store -> STORE IN id','store',3,'p_store','parser.py',140),
  ('stdin -> INPUT arg','stdin',2,'p_stdin','parser.py',145),
  ('stdout -> PRINT expression','stdout',2,'p_stdout','parser.py',150),
  ('stdout -> PRINTLN expression','stdout',2,'p_stdout_nl','parser.py',155),
  ('arg -> expression','arg',1,'p_onearg','parser.py',161),
  ('arg -> empty','arg',1,'p_onearg','parser.py',162),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',167),
]
