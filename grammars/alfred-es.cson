name:           'Alfred (ES)'
scopeName:      'source.alfred.es'
fileTypes:      ['.es.alf','.alf']
firstLineRegex: '^(?i)alfred(?-i)$'
contentRegex:   '^(?i)adi[óo]s alfred(?-i)$'

# AZUL    support.type.alfred
# CARNE   support.class.alfred
# VERDE   string.quoted.alfred
# MORADO  storage.modifier.alfred

patterns: [
  {
    # Comando: Alfred
    match:  '^(?i)alfred(?-i)$',
    name:   'support.type.alfred'
  },
  {
    # Comando: Adiós Alfred
    match:  '^(?i)adi[óo]s alfred(?-i)$',
    name:   'support.type.alfred'
  },
  {
    # Constante: Single Quoted
    match:  '\'[^\']+\'',
    name:   'string.quoted.alfred'
  },
  {
    # Constante: Doble Quoted
    match:  '"[^"]+"',
    name:   'string.quoted.alfred'
  },
  {
    # Constante: True
    match:  '(?: |,|\\[)((?i)(verdadero|verdad|cierto)(?-i))(?:$| |,|])',
    captures:
      '2':
        name: 'support.class.alfred'
    name:   'meta.function.alfred'
  },
  {
    # Constante: False
    match:  '((?i)(falso|mentira)(?-i))(?:$| |,|])',
    captures:
      '2':
        name: 'support.class.alfred'
    name:   'meta.function.alfred'
  },
  {
    # Comando: Escribe {Texto}
    match:  '^((?i)escribe(?-i)) (.*)$',
    captures:
      '1':
        name: 'support.type.alfred'
      '2':
        name: 'string.quoted.alfred'
    name:   'meta.function.alfred'
  },
  {
    # Comando: Define {Nombre} como {Valor}
    match:  '^((?i)define(?-i)) (.+) ((?i)como(?-i)(?!.*(?i)como(?-i)))',
    captures:
      '1':
        name: 'support.type.alfred'
      '3':
        name: 'support.type.alfred'
    name:   'meta.function.alfred'
  },
  {
    # Comando: Define el momento {Nombre}
    match:  '^([Dd][Ee][Ff][Ii][Nn][Ee] [Ee][Ll] [Mm][Oo][Mm][Ee][Nn][Tt][Oo]) (.*)$',
    captures:
      '1':
        name: 'support.type.alfred'
      '2':
        name: 'storage.modifier.alfred'
    name:   'meta.function.alfred'
  },
  {
    # Comando: Salta/Vete a {Nombre}
    match:  '^(([Ss][Aa][Ll][Tt][Aa])|([Vv][Ee][Tt][Ee]) [Aa]) (.*)$',
    captures:
      '1':
        name: 'support.type.alfred'
      '4':
        name: 'storage.modifier.alfred'
    name:   'meta.function.alfred'
  },
  {
    # Comando: Muestra el valor de {Variable}
    match:  '^([Mm][Uu][Ee][Ss][Tt][Rr][Aa] [Ee][Ll] [Vv][Aa][Ll][Oo][Rr] [Dd][Ee]) (.*)$',
    captures:
      '1':
        name: 'support.type.alfred'
    name:   'meta.function.alfred'
  },
  {
    # Comando: Muestra {Variable}
    match:  '^([Mm][Uu][Ee][Ss][Tt][Rr][Aa]) (.*)$',
    captures:
      '1':
        name: 'support.type.alfred'
    name:   'meta.function.alfred'
  }
]
