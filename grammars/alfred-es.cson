scopeName:        'source.alfred.es'
name:             'Alfred Language (ES)'
fileTypes:        [ 'alf.es', 'alf' ]
contentRegex:     '^\\s*(?i:alfred)\\s*,'
limitLineLength:  false

patterns: [
  {
    comment: 'Comment'
    name: 'comment.alfred'
    match: '^\\s*\\(.*\\)\\s*'
  },
  {
    comment: 'Constant: String'
    name: 'string.alfred'
    match: '".*"\\s*'
  },
  {
    comment: 'Constant: Integer'
    name: 'constant.numeric.alfred'
    match: '\\d+\\s*'
  },

  {
    comment: 'Alfred'
    name: 'constant.alfred'
    match: '\\b(?i)alfred\\b'
  },
  {
    comment: 'Reserved Words: Instructions'
    match: '\\b(?i)(adi[óo]s|define|escribe|la entrada)\\b'
    name: 'entity.name.function.alfred'
  },
  {
    comment: 'Reserved Words: Maths BinOp'
    match: '\\b(?i)(mas|menos|por|entre|elevado a|m[óo]dulo|decrementa|incrementa)\\b'
    name: 'entity.name.function.alfred'
  },
  {
    comment: 'Reserved Words: Bool BinOp'
    match: '\\b(?i)(es|sea)?\\s+(igual a|mayor que|menor que)\\b'
    name: 'entity.name.function.alfred'
  },
  {
    comment: 'Reserved Words: Bool BinOp'
    match: '\\b(?i)(igual a|mayor|menor)\\b'
    name: 'entity.name.function.alfred'
  },
  {
    comment: 'Reserved Words: Bool BinOp'
    match: '\\b(?i)(igual a|mayor|menor)\\b'
    name: 'entity.name.function.alfred'
  },
  {
    comment: 'Functions'
    match: '\\b(?i)(para)\\s+([a-zA-ZÁÉÍÓÚáéíóú_]\\w*)\\b'
    captures:
      '1':
        name: 'keyword.function.alfred'
      '2':
        name: 'entity.name.function.alfred'
  },
  {
    comment: 'Return'
    match: '\\b(?i)(devuelve)\\b'
    name: 'keyword.function.return.alfred'
  },
  {
    comment: 'Conditional'
    match: '\\b(?i)(si|si no|listo)\\b'
    name: 'keyword.control.conditional.alfred'
  },
  {
    comment: 'Loops'
    match: '\\b(?i)(mientras|haz)\\b'
    name: 'keyword.control.loops.alfred'
  },
  {
    comment: 'Auxiliary'
    match: '\\b(?i)(e|y|no)\\b'
    name: 'keyword.control.auxiliary.alfred'
  }
]
