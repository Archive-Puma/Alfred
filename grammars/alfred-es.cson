scopeName:        'source.alfred.es'
name:             'Alfred Language (ES)'
fileTypes:        [ 'alf.es', 'alf' ]
contentRegex:     '^\\s*(?i:alfred)\\s*$'
limitLineLength:  false

patterns: [
  {
    comment: 'Comentarios'
    name: 'comment.alfred'
    match: '^\\s*\\(.*\\)\\s*$'
  },
  {
    comment: 'Constante: Texto'
    name: 'string.alfred'
    match: '".*"\\s*$'
  },
  {
    comment: 'Constante: Entero'
    name: 'constant.numeric.alfred'
    match: '\\d+\\s*$'
  },

  {
    comment: 'Instrucción de inicio'
    name: 'constant.alfred'
    match: '^\\s*(?i)alfred\\s*$'
  },

  {
    comment: 'Instrucción: Base.Exit'
    match: '^\\s*(?i)(adi[oó]s) (alfred)\\s*$'
    captures:
      1:
        name: 'entity.name.function.alfred'
      2:
        name: 'constant.alfred'
  },

  {
    comment: 'Instrucción: Standard.Define'
    match: '^\\s*(?i)(define) (la variable) .+ (como) '
    captures:
      1:
        name: 'entity.name.function.alfred'
      2:
        name: 'entity.name.type.alfred'
      3:
        name: 'entity.name.function.alfred'
  },

  {
    comment: 'Instrucción: IO.Write'
    match: '^\\s*(?i)(escribe) (".*")\\s*$'
    captures:
      1:
        name: 'entity.name.function.alfred'
      2:
        name: 'string.alfred'
  },
  {
    comment: 'Instrucción: IO.Show'
    match: '^\\s*(?i)(?i)(muestra) ((?:el tipo de )?la variable) .+\\s*$'
    captures:
      1:
        name: 'entity.name.function.alfred'
      2:
        name: 'entity.name.type.alfred'
  },

  {
    comment: 'Instrucción: Math.Addition/Subtraction'
    match: '^\\s*(?i)(s[uú]male|r[eé]stale) (\\d+) (a) .+\\s*$'
    captures:
      1:
        name: 'entity.name.function.alfred'
      2:
        name: 'constant.numeric.alfred'
      3:
        name: 'entity.name.function.alfred'
  },
  {
    comment: 'Instrucción: Math.Multiplication'
    match: '^\\s*(?i)(multiplica) .+ (por) (\\d+)\\s*$'
    captures:
      1:
        name: 'entity.name.function.alfred'
      2:
        name: 'entity.name.function.alfred'
      3:
        name: 'constant.numeric.alfred'
  },
  {
    comment: 'Instrucción: Math.Division'
    match: '^\\s*(?i)(divide) .+ (entre) (\\d+)\\s*$'
    captures:
      1:
        name: 'entity.name.function.alfred'
      2:
        name: 'entity.name.function.alfred'
      3:
        name: 'constant.numeric.alfred'
  },

  {
    comment: 'Instrucción: Control.Moments.Define'
    match: '^\\s*(?i)(define) (este momento) (como) .+\\s*$'
    captures:
      1:
        name: 'entity.name.function.alfred'
      2:
        name: 'entity.name.type.alfred'
      3:
        name: 'entity.name.function.alfred'
  },
  {
    comment: 'Instrucción: Control.Moments.Jump'
    match: '^\\s*(?i)(vete a)(l momento) .+\\s*$'
    captures:
      1:
        name: 'entity.name.function.alfred'
      2:
        name: 'entity.name.type.alfred'
  }

  {
    comment: 'Instrucción: Network.ECHO/HTTP/Discard'
    match: '^\\s*(?i)(crea un servidor) (echo|discard|http|web)(?: (en el puerto) (\\d+))?\\s*$'
    captures:
      1:
        name: 'entity.name.function.alfred'
      2:
        name: 'entity.name.type.alfred'

      3:
        name: 'entity.name.function.alfred'
      4:
        name: 'constant.numeric.alfred'
  }

]
